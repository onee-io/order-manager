<?php
/**
 * Created by PhpStorm.
 * User: VOREVER
 * Date: 10/9/16
 * Time: 10:09
 */

namespace App\Model\Table;

use Cake\ORM\Table;


/**
 * @name 用户角色关联表
 * Class WoUserRolesTable
 * @package App\Model\Table
 * id => ID
 * user_id => 用户ID
 * role_id => 角色ID
 */
class WoUserRolesTable extends Table {

    public function initialize(array $config)
    {
        parent::initialize($config); // TODO: Change the autogenerated stub
        $this->table('wo_user_roles');
        $this->primaryKey('id');
    }

    /**
     * @name 通过用户ID获取角色ID列表
     * @param $userId
     * @return array|null
     */
    public function getRoleIdListByUserId($userId) {
        if ($userId) {
            $results = $this->find()
                ->where([
                    'user_id' => $userId
                ])
                ->toArray();
            if ($results) {
                $roleIdList = array();
                foreach ($results as $result) {
                    $roleIdList[] = $result['role_id'];
                }
                return $roleIdList;
            }
            return null;
        }
        return null;
    }

    /**
     * @name 通过角色ID获取用户ID列表
     * @param $roleId
     * @return array|null
     */
    public function getUserIdListByRoleId($roleId) {
        if ($roleId) {
            $results = $this->find()
                ->where([
                    'role_id' => $roleId
                ])
                ->toArray();
            if ($results) {
                $userIdList = array();
                foreach ($results as $result) {
                    $userIdList[] = $result['user_id'];
                }
                return $userIdList;
            }
            return null;
        }
        return null;
    }

    /**
     * 插入一条新的用户角色关联数据
     * @param $valuesArray
     * @return null
     */
    public function insertRelationByValuesArray($valuesArray) {
        if ($valuesArray) {
            $res = $this->query()->insert([
                'user_id',
                'role_id'
            ])->values($valuesArray)->execute();
            return $res;
        }
        return null;
    }

//    /**
//     * 删除关系数据通过userID
//     * @param $userId
//     * @return $this|bool|mixed|null
//     */
//    public function deleteRelationByUserId($userId) {
//        if ($userId) {
//            $res = $this->find()->where([
//                'user_id' => $userId
//            ])->delete()->execute();
//            return $res;
//        }
//        return null;
//    }

    /**
     * 修改用户角色关系
     * @param $userId
     * @param $values
     * @return null
     */
    public function modifyRelationByUserIdAndValues($userId, $values) {
        if ($userId && $values) {
            $res = $this->query()->update()->set($values)->where([
                'user_id' => $userId
            ])->execute();
            return $res;
        }
        return null;
    }

}